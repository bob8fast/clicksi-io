-- Insert test page into pages table
INSERT INTO pages (
    slug,
    title,
    content,
    style,
    description,
    keywords,
    status,
    lang,
    images,
    videos,
    show_title,
    show_description,
    show_metadata,
    show_button,
    show_header,
    show_footer,
    created_at,
    updated_at
) VALUES (
    'test-page',
    'Dynamic Test Page',
    '{"type": "html", "value": "<div class=\"test-page-container\">\n  <div class=\"hero-section\">\n    <h2>Welcome to the Dynamic Test Page</h2>\n    <p class=\"hero-subtitle\">Experience interactive components and real-time updates</p>\n  </div>\n\n  <div class=\"features-grid\">\n    <div class=\"feature-card\">\n      <div class=\"feature-icon\">‚è∞</div>\n      <h3>Real-time Clock</h3>\n      <div class=\"clock-display\" id=\"live-clock\">Loading...</div>\n      <p>Live updating clock showing current time</p>\n    </div>\n\n    <div class=\"feature-card\">\n      <div class=\"feature-icon\">üî¢</div>\n      <h3>Interactive Counter</h3>\n      <div class=\"counter-container\">\n        <button class=\"counter-btn\" onclick=\"updateCounter(-1)\">-</button>\n        <span class=\"counter-value\" id=\"counter\">0</span>\n        <button class=\"counter-btn\" onclick=\"updateCounter(1)\">+</button>\n      </div>\n      <button class=\"reset-btn\" onclick=\"resetCounter()\">Reset</button>\n    </div>\n\n    <div class=\"feature-card\">\n      <div class=\"feature-icon\">üé®</div>\n      <h3>Color Changer</h3>\n      <div class=\"color-preview\" id=\"color-preview\"></div>\n      <button class=\"color-btn\" onclick=\"changeColor()\">Change Theme</button>\n      <p class=\"color-info\">Current: <span id=\"current-color\">#3498db</span></p>\n    </div>\n\n    <div class=\"feature-card\">\n      <div class=\"feature-icon\">üìù</div>\n      <h3>Quick Notes</h3>\n      <div class=\"notes-container\">\n        <input type=\"text\" id=\"note-input\" placeholder=\"Add a note...\" class=\"note-input\">\n        <button onclick=\"addNote()\" class=\"add-btn\">Add</button>\n      </div>\n      <ul id=\"notes-list\" class=\"notes-list\"></ul>\n    </div>\n  </div>\n\n  <div class=\"stats-section\">\n    <div class=\"stat-item\">\n      <span class=\"stat-label\">Page Views</span>\n      <span class=\"stat-value\" id=\"page-views\">1</span>\n    </div>\n    <div class=\"stat-item\">\n      <span class=\"stat-label\">Interactions</span>\n      <span class=\"stat-value\" id=\"interactions\">0</span>\n    </div>\n    <div class=\"stat-item\">\n      <span class=\"stat-label\">Time on Page</span>\n      <span class=\"stat-value\" id=\"time-spent\">0s</span>\n    </div>\n  </div>\n\n  <div class=\"demo-section\">\n    <h3>Form Components Demo</h3>\n    <form class=\"demo-form\" onsubmit=\"return handleFormSubmit(event)\">\n      <div class=\"form-group\">\n        <label for=\"demo-name\">Name:</label>\n        <input type=\"text\" id=\"demo-name\" name=\"name\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"demo-email\">Email:</label>\n        <input type=\"email\" id=\"demo-email\" name=\"email\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"demo-message\">Message:</label>\n        <textarea id=\"demo-message\" name=\"message\" rows=\"3\"></textarea>\n      </div>\n      <button type=\"submit\" class=\"submit-btn\">Submit Demo</button>\n    </form>\n    <div id=\"form-result\" class=\"form-result\"></div>\n  </div>\n\n  <script>\n    let counter = 0;\n    let interactions = 0;\n    let startTime = Date.now();\n    let currentTheme = ''#3498db'';\n    let notes = [];\n\n    // Update clock every second\n    function updateClock() {\n      const now = new Date();\n      document.getElementById(''live-clock'').textContent = now.toLocaleTimeString();\n    }\n    setInterval(updateClock, 1000);\n    updateClock();\n\n    // Counter functions\n    function updateCounter(change) {\n      counter += change;\n      document.getElementById(''counter'').textContent = counter;\n      incrementInteractions();\n    }\n\n    function resetCounter() {\n      counter = 0;\n      document.getElementById(''counter'').textContent = counter;\n      incrementInteractions();\n    }\n\n    // Color changer\n    function changeColor() {\n      const colors = [''#3498db'', ''#e74c3c'', ''#2ecc71'', ''#f39c12'', ''#9b59b6'', ''#1abc9c'', ''#34495e''];\n      currentTheme = colors[Math.floor(Math.random() * colors.length)];\n      document.documentElement.style.setProperty(''--theme-color'', currentTheme);\n      document.getElementById(''color-preview'').style.backgroundColor = currentTheme;\n      document.getElementById(''current-color'').textContent = currentTheme;\n      incrementInteractions();\n    }\n\n    // Notes functionality\n    function addNote() {\n      const input = document.getElementById(''note-input'');\n      const text = input.value.trim();\n      if (text) {\n        notes.push(text);\n        input.value = '''';\n        renderNotes();\n        incrementInteractions();\n      }\n    }\n\n    function removeNote(index) {\n      notes.splice(index, 1);\n      renderNotes();\n      incrementInteractions();\n    }\n\n    function renderNotes() {\n      const list = document.getElementById(''notes-list'');\n      list.innerHTML = notes.map((note, index) => \n        `<li class=\"note-item\">\n          <span>${note}</span>\n          <button onclick=\"removeNote(${index})\" class=\"remove-btn\">√ó</button>\n        </li>`\n      ).join('''');\n    }\n\n    // Form handling\n    function handleFormSubmit(event) {\n      event.preventDefault();\n      const formData = new FormData(event.target);\n      const data = Object.fromEntries(formData.entries());\n      \n      document.getElementById(''form-result'').innerHTML = \n        `<div class=\"success-message\">\n          <h4>Form Submitted Successfully!</h4>\n          <p><strong>Name:</strong> ${data.name}</p>\n          <p><strong>Email:</strong> ${data.email}</p>\n          <p><strong>Message:</strong> ${data.message || ''No message provided''}</p>\n        </div>`;\n      \n      event.target.reset();\n      incrementInteractions();\n      return false;\n    }\n\n    // Stats tracking\n    function incrementInteractions() {\n      interactions++;\n      document.getElementById(''interactions'').textContent = interactions;\n    }\n\n    function updateTimeSpent() {\n      const elapsed = Math.floor((Date.now() - startTime) / 1000);\n      document.getElementById(''time-spent'').textContent = elapsed + ''s'';\n    }\n    setInterval(updateTimeSpent, 1000);\n\n    // Initialize\n    document.addEventListener(''DOMContentLoaded'', function() {\n      changeColor();\n      document.getElementById(''note-input'').addEventListener(''keypress'', function(e) {\n        if (e.key === ''Enter'') addNote();\n      });\n    });\n  </script>\n</div>"}',
    '{"type": "css", "value": ":root {\n  --theme-color: #3498db;\n  --theme-light: #ecf0f1;\n  --theme-dark: #2c3e50;\n  --success-color: #2ecc71;\n  --danger-color: #e74c3c;\n  --warning-color: #f39c12;\n  --border-radius: 8px;\n  --shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  --shadow-hover: 0 4px 20px rgba(0, 0, 0, 0.15);\n  --transition: all 0.3s ease;\n}\n\n.test-page-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n  font-family: -apple-system, BlinkMacSystemFont, ''Segoe UI'', Roboto, ''Helvetica Neue'', Arial, sans-serif;\n  line-height: 1.6;\n  color: var(--theme-dark);\n}\n\n/* Hero Section */\n.hero-section {\n  text-align: center;\n  margin-bottom: 3rem;\n  padding: 3rem 2rem;\n  background: linear-gradient(135deg, var(--theme-color), #8e44ad);\n  color: white;\n  border-radius: var(--border-radius);\n  box-shadow: var(--shadow);\n}\n\n.hero-section h2 {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n  font-weight: 700;\n}\n\n.hero-subtitle {\n  font-size: 1.2rem;\n  opacity: 0.9;\n  margin: 0;\n}\n\n/* Features Grid */\n.features-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 2rem;\n  margin-bottom: 3rem;\n}\n\n.feature-card {\n  background: white;\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  box-shadow: var(--shadow);\n  transition: var(--transition);\n  border: 2px solid transparent;\n  text-align: center;\n}\n\n.feature-card:hover {\n  transform: translateY(-5px);\n  box-shadow: var(--shadow-hover);\n  border-color: var(--theme-color);\n}\n\n.feature-icon {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n  display: block;\n}\n\n.feature-card h3 {\n  color: var(--theme-dark);\n  margin-bottom: 1.5rem;\n  font-size: 1.4rem;\n}\n\n/* Clock Component */\n.clock-display {\n  font-size: 2rem;\n  font-weight: bold;\n  color: var(--theme-color);\n  background: var(--theme-light);\n  padding: 1rem;\n  border-radius: var(--border-radius);\n  margin: 1rem 0;\n  border: 2px solid var(--theme-color);\n}\n\n/* Counter Component */\n.counter-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n  margin: 1rem 0;\n}\n\n.counter-btn {\n  background: var(--theme-color);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  font-size: 1.5rem;\n  cursor: pointer;\n  transition: var(--transition);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.counter-btn:hover {\n  background: var(--theme-dark);\n  transform: scale(1.1);\n}\n\n.counter-value {\n  font-size: 2rem;\n  font-weight: bold;\n  color: var(--theme-color);\n  min-width: 60px;\n  background: var(--theme-light);\n  padding: 0.5rem;\n  border-radius: var(--border-radius);\n}\n\n.reset-btn {\n  background: var(--warning-color);\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  transition: var(--transition);\n  margin-top: 1rem;\n}\n\n.reset-btn:hover {\n  background: #e67e22;\n  transform: translateY(-2px);\n}\n\n/* Color Changer */\n.color-preview {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  margin: 1rem auto;\n  background: var(--theme-color);\n  border: 3px solid white;\n  box-shadow: var(--shadow);\n  transition: var(--transition);\n}\n\n.color-btn {\n  background: linear-gradient(45deg, var(--theme-color), #8e44ad);\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-weight: 600;\n  transition: var(--transition);\n}\n\n.color-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-hover);\n}\n\n.color-info {\n  margin-top: 1rem;\n  font-size: 0.9rem;\n  color: #666;\n}\n\n/* Notes Component */\n.notes-container {\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.note-input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 2px solid var(--theme-light);\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  transition: var(--transition);\n}\n\n.note-input:focus {\n  outline: none;\n  border-color: var(--theme-color);\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n}\n\n.add-btn {\n  background: var(--success-color);\n  color: white;\n  border: none;\n  padding: 0.75rem 1rem;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  transition: var(--transition);\n}\n\n.add-btn:hover {\n  background: #27ae60;\n}\n\n.notes-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.note-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: var(--theme-light);\n  padding: 0.75rem;\n  border-radius: var(--border-radius);\n  margin-bottom: 0.5rem;\n  transition: var(--transition);\n}\n\n.note-item:hover {\n  background: #dfe6e9;\n}\n\n.remove-btn {\n  background: var(--danger-color);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 25px;\n  height: 25px;\n  cursor: pointer;\n  transition: var(--transition);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n}\n\n.remove-btn:hover {\n  background: #c0392b;\n  transform: scale(1.1);\n}\n\n/* Stats Section */\n.stats-section {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 2rem;\n  margin: 3rem 0;\n  padding: 2rem;\n  background: var(--theme-light);\n  border-radius: var(--border-radius);\n}\n\n.stat-item {\n  text-align: center;\n  padding: 1rem;\n  background: white;\n  border-radius: var(--border-radius);\n  box-shadow: var(--shadow);\n}\n\n.stat-label {\n  display: block;\n  font-size: 0.9rem;\n  color: #666;\n  margin-bottom: 0.5rem;\n}\n\n.stat-value {\n  display: block;\n  font-size: 2rem;\n  font-weight: bold;\n  color: var(--theme-color);\n}\n\n/* Demo Form */\n.demo-section {\n  background: white;\n  padding: 2rem;\n  border-radius: var(--border-radius);\n  box-shadow: var(--shadow);\n  margin-top: 2rem;\n}\n\n.demo-section h3 {\n  color: var(--theme-dark);\n  margin-bottom: 1.5rem;\n  text-align: center;\n}\n\n.demo-form {\n  max-width: 500px;\n  margin: 0 auto;\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n  color: var(--theme-dark);\n}\n\n.form-group input,\n.form-group textarea {\n  width: 100%;\n  padding: 0.75rem;\n  border: 2px solid var(--theme-light);\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  transition: var(--transition);\n  font-family: inherit;\n}\n\n.form-group input:focus,\n.form-group textarea:focus {\n  outline: none;\n  border-color: var(--theme-color);\n  box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n}\n\n.submit-btn {\n  width: 100%;\n  background: linear-gradient(45deg, var(--theme-color), #8e44ad);\n  color: white;\n  border: none;\n  padding: 1rem;\n  border-radius: var(--border-radius);\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: var(--transition);\n}\n\n.submit-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-hover);\n}\n\n.form-result {\n  margin-top: 2rem;\n}\n\n.success-message {\n  background: #d4edda;\n  color: #155724;\n  padding: 1.5rem;\n  border-radius: var(--border-radius);\n  border: 1px solid #c3e6cb;\n}\n\n.success-message h4 {\n  margin-top: 0;\n  color: var(--success-color);\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .test-page-container {\n    padding: 1rem;\n  }\n\n  .hero-section {\n    padding: 2rem 1rem;\n  }\n\n  .hero-section h2 {\n    font-size: 2rem;\n  }\n\n  .features-grid {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n\n  .feature-card {\n    padding: 1.5rem;\n  }\n\n  .stats-section {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n\n  .counter-container {\n    flex-wrap: wrap;\n  }\n\n  .notes-container {\n    flex-direction: column;\n  }\n}\n\n/* Animation for smooth transitions */\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.feature-card,\n.stat-item {\n  animation: fadeIn 0.6s ease-out;\n}\n\n/* Interactive hover effects */\n.feature-card:hover .feature-icon {\n  transform: scale(1.1);\n  transition: var(--transition);\n}\n\n/* Loading states */\n.loading {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n/* Focus states for accessibility */\nbutton:focus,\ninput:focus,\ntextarea:focus {\n  outline: 2px solid var(--theme-color);\n  outline-offset: 2px;\n}"}',
    'Interactive test page with dynamic components, real-time updates, and responsive design',
    ARRAY['test', 'dynamic', 'interactive', 'components', 'real-time'],
    'published',
    'en',
    '[]',
    '[]',
    true,
    true,
    true,
    null,
    true,
    true,
    NOW(),
    NOW()
)
ON CONFLICT (slug)
DO UPDATE SET
    title = EXCLUDED.title,
    content = EXCLUDED.content,
    style = EXCLUDED.style,
    description = EXCLUDED.description,
    keywords = EXCLUDED.keywords,
    status = EXCLUDED.status,
    lang = EXCLUDED.lang,
    show_title = EXCLUDED.show_title,
    show_description = EXCLUDED.show_description,
    show_metadata = EXCLUDED.show_metadata,
    show_button = EXCLUDED.show_button,
    show_header = EXCLUDED.show_header,
    show_footer = EXCLUDED.show_footer,
    updated_at = NOW();